package v.blade.library;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import v.blade.sources.Source;

public class Library
{
    /*
     * In order to update the library, we need to add 'objects' from every source
     * For that, we have to find when the names are the same -> same object
     * HashMaps allows that in constant time, much better than O(n) on a list
     * However, in the end we will need a list ; see below the sorted lists, generated
     * at the end of library modification
     */
    private static HashMap<String, Artist> library_artists = new HashMap<>();
    private static HashMap<String, Album> library_albums = new HashMap<>();
    private static HashMap<String, Song> library_songs = new HashMap<>();
    private static ArrayList<Playlist> library_playlists = new ArrayList<>();

    /*
     * 'Handled' : handles are 'objects' that are not in the library, but that we need in RAM
     * For example, songs inside of playlists that are not in the library, or when
     * doing a web search
     */
    private static HashMap<String, Artist> handled_artists = new HashMap<>();
    private static HashMap<String, Album> handled_albums = new HashMap<>();
    private static HashMap<String, Song> handled_songs = new HashMap<>();

    /* Those are *sorted* lists, generated by sorting the content of HashMaps */
    private static ArrayList<Artist> artists_list = new ArrayList<>();
    private static ArrayList<Album> albums_list = new ArrayList<>();
    private static ArrayList<Song> songs_list = new ArrayList<>();

    public static List<Artist> getArtists()
    {
        return artists_list;
    }

    public static List<Album> getAlbums()
    {
        return albums_list;
    }

    public static List<Song> getSongs()
    {
        return songs_list;
    }

    public static List<Playlist> getPlaylists()
    {
        return library_playlists;
    }

    public static void addSong(String title, String album, String[] artists, Source source, Object sourceId,
                               String[] albumArtists, String albumMiniatureURL, int track_number, String[] artistMiniaturesUrl,
                               String[] albumArtistsMiniatureUrl)
    {
        Song test = new Song();
        test.name = title;
        songs_list.add(test);
        System.out.println("Added song " + title);
    }
}
